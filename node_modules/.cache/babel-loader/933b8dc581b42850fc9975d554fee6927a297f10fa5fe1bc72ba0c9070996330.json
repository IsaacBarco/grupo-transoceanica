{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\prueba-tecnica-main\\\\src\\\\Components\\\\Card.jsx\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = ({\n  data\n}) => {\n  if (!Array.isArray(data) || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay datos disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n  const readMore = url => {\n    if (url) {\n      window.open(url, \"_blank\");\n    } else {\n      console.warn(\"Invalid URL\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardContainer\",\n    children: data.map((curItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [curItem.urlToImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: curItem.urlToImage,\n        alt: curItem.title || \"News Image\",\n        className: \"card-image\",\n        onError: e => {\n          e.target.onerror = null; // previene bucles infinitos\n          e.target.src = 'default-image-url.jpg'; // URL de una imagen por defecto\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: curItem.title || \"Sin título\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: curItem.description || \"Descripción no disponible.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"read-more-button\",\n          onClick: () => readMore(curItem.url || \"#\"),\n          disabled: !curItem.url,\n          \"aria-label\": curItem.url ? `Read more about ${curItem.title}` : \"No link available\",\n          children: curItem.url ? \"Read More\" : \"No Link Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, curItem.id || index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n// Validación de PropTypes\n_c = Card;\nCard.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    urlToImage: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    url: PropTypes.string\n  })).isRequired\n};\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Card","data","Array","isArray","length","children","fileName","_jsxFileName","lineNumber","columnNumber","readMore","url","window","open","console","warn","className","map","curItem","index","urlToImage","src","alt","title","onError","e","target","onerror","description","onClick","disabled","id","_c","propTypes","arrayOf","shape","string","isRequired","$RefreshReg$"],"sources":["C:/Users/User/Desktop/prueba-tecnica-main/src/Components/Card.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Card = ({ data }) => {\n    if (!Array.isArray(data) || data.length === 0) {\n        return <p>No hay datos disponibles.</p>;\n    }\n\n    const readMore = (url) => {\n        if (url) {\n            window.open(url, \"_blank\");\n        } else {\n            console.warn(\"Invalid URL\");\n        }\n    };\n\n    return (\n        <div className=\"cardContainer\">\n            {data.map((curItem, index) => (\n                <div className=\"card\" key={curItem.id || index}>\n                    {curItem.urlToImage && (\n                        <img\n                            src={curItem.urlToImage}\n                            alt={curItem.title || \"News Image\"}\n                            className=\"card-image\"\n                            onError={(e) => {\n                                e.target.onerror = null; // previene bucles infinitos\n                                e.target.src = 'default-image-url.jpg'; // URL de una imagen por defecto\n                            }}\n                        />\n                    )}\n                    <div className=\"content\">\n                        <h3 className=\"title\">{curItem.title || \"Sin título\"}</h3>\n                        <p>{curItem.description || \"Descripción no disponible.\"}</p>\n                        <button\n                            className=\"read-more-button\"\n                            onClick={() => readMore(curItem.url || \"#\")}\n                            disabled={!curItem.url}\n                            aria-label={curItem.url ? `Read more about ${curItem.title}` : \"No link available\"}\n                        >\n                            {curItem.url ? \"Read More\" : \"No Link Available\"}\n                        </button>\n                    </div>\n                </div>\n            ))}\n        </div>\n    );\n};\n\n// Validación de PropTypes\nCard.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string,\n        urlToImage: PropTypes.string,\n        title: PropTypes.string,\n        description: PropTypes.string,\n        url: PropTypes.string,\n    })).isRequired,\n};\n\nexport default Card;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}